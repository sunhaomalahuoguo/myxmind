1.数据来源有三部分：统一支付平台，生产系统，在线业务平台
2.按照商户号和订单号进行拆分，先是统一支付与生产对账，一致数据进入一致表，不一致数据进入不一致表，然后一致表里的数据再跟在线平台数据进行对账，此时对一致表中与在线平台对平的数据打标，就是我们的目标数据
3.根据一致表里的数据出某日的清分报表，根据商户号、清分机构号、业务线来出，主要是支付、退款、这两者的轧差金额，作为财务往各机构打钱的依据




INSERT INTO `rpt_clear_task_step` VALUES ('100','100','查询clear_date为空记录数','SELECT COUNT(1) from rpt_compare_consistent w WHERE (w.clear_date is NULL OR w.clear_date = \'0000-00-00\') and w.consistent_type = \'P\'','查询一致表中clear_date为空记录数',NULL),('100','105','更新clear_date字段','UPDATE rpt_compare_consistent\r\nset clear_date = IF(prod_check_date >= IF(fund_check_date >= busi_trans_date,fund_check_date,busi_trans_date),prod_check_date,IF(fund_check_date >= busi_trans_date,fund_check_date,busi_trans_date))\r\nWHERE (clear_date is null OR clear_date = \'0000-00-00\')\r\nand consistent_type = \'P\'','统一更新一致表clear_date内容(只更新consistent_type为P的记录)',NULL),('100','110','根据清分日期查询一致表快照记录数','SELECT COUNT(1) FROM rpt_compare_consistent_snap WHERE clear_date =:currentDate','一致快照表中的数据都是为P的，所以此时不用加consistent_type=P',NULL),('100','115','根据清分日期删除一致表快照记录','DELETE from rpt_compare_consistent_snap WHERE clear_date =?','一致快照表中的数据都是为P的，所以此时不用加consistent_type=P',NULL),('100','120','根据清分时间从一致表向一致表快照表灌入记','INSERT INTO rpt_compare_consistent_snap (\r\nid,\r\norder_no,\r\nbusiness_order_id,\r\norg_flag,\r\nbusiness_line,\r\norder_type,\r\npay_method,\r\norder_amount,\r\ndiscount_amount,\r\npay_amount,\r\ncredit,\r\npoint_credit,\r\ncard_amount,\r\norg_no,\r\noper_type,\r\npro_no,\r\nsource_type,\r\nis_prod_sync,\r\nbusi_trans_date,\r\nbusi_trans_time,\r\nrelation_id,\r\nmerchant_no,\r\nmerchant_name,\r\ntrx_ssn,\r\nplt_dt,\r\nfund_check_date,\r\nori_trx_ssn,\r\nbalance_type,\r\nchk_source,\r\nbusiness_amount,\r\nbill_id,\r\nchannel_type,\r\nacc_ttp_cd,\r\nbill_type,\r\nrefund_type,\r\nrepeated_trans_flag,\r\nconsistent_type,\r\nprod_check_date,\r\nclear_date,\r\nprod_chk_amount,\r\nremark,\r\ncreated_time,\r\nsnap_time\r\n) SELECT\r\nid,\r\norder_no,\r\nbusiness_order_id,\r\norg_flag,\r\nbusiness_line,\r\norder_type,\r\npay_method,\r\norder_amount,\r\ndiscount_amount,\r\npay_amount,\r\ncredit,\r\npoint_credit,\r\ncard_amount,\r\norg_no,\r\noper_type,\r\npro_no,\r\nsource_type,\r\nis_prod_sync,\r\nbusi_trans_date,\r\nbusi_trans_time,\r\nrelation_id,\r\nmerchant_no,\r\nmerchant_name,\r\ntrx_ssn,\r\nplt_dt,\r\nfund_check_date,\r\nori_trx_ssn,\r\nbalance_type,\r\nchk_source,\r\nbusiness_amount,\r\nbill_id,\r\nchannel_type,\r\nacc_ttp_cd,\r\nbill_type,\r\nrefund_type,\r\nrepeated_trans_flag,\r\nconsistent_type,\r\nprod_check_date,\r\nclear_date,\r\nprod_chk_amount,\r\nremark,\r\ncreated_time,\r\nNOW()\r\nFROM\r\nrpt_compare_consistent\r\nWHERE\r\nconsistent_type = \'P\'\r\nAND clear_date =?','根据清分时间从一致表向一致表快照表灌入记',NULL),('110','100','汇总T日清分总额-T日收进数据','SELECT \n cc.merchant_no, \n cc.org_no, \n cc.business_line, \n cc.acc_ttp_cd, \n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) as current_pay_clear_amount, \n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0) as current_rfn_clear_amount, \n (IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) - IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0)) as current_net_clear_amout \n FROM \n rpt_compare_consistent_snap cc \n WHERE \n cc.channel_type = \'1\' \n and cc.consistent_type = \'P\' \n and cc.clear_date =:checkDate\n and cc.fund_check_date =:checkDate \n GROUP BY \n cc.merchant_no, \n cc.org_no, \n cc.business_line, \n cc.acc_ttp_cd','汇总T日清分总额-T日收进数据',NULL),('110','105','汇总T日清分总额-历史应收进数据','SELECT \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) as history_pay_clear_amount, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0) as history_rfn_clear_amount, \r\n (IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) - IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0)) as history_net_clear_amount \r\n FROM \r\n rpt_compare_consistent_snap cc \r\n WHERE \r\n cc.channel_type = \'1\' \r\n and cc.consistent_type = \'P\' \r\n and cc.clear_date =:checkDate \r\n and cc.fund_check_date <:checkDate \r\n GROUP BY \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd','汇总T日清分总额-历史应收进数据',NULL),('110','110','汇总T日清分总额-手续费数据','SELECT \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN fad.fee_cent END),0) as clear_pay_handle_fee, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN CASE WHEN fad.trx_flag = \'PTP\' THEN fad.fee_cent*(-1) ELSE fad.fee_cent END END),0) as clear_rfn_handle_fee, \r\n (IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN fad.fee_cent END),0) - IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN CASE WHEN fad.trx_flag = \'PTP\' THEN fad.fee_cent*(-1) ELSE fad.fee_cent END END),0)) as clear_net_handle_fee \r\n FROM \r\n rpt_compare_consistent_snap cc \r\n left join \r\n rpt_fund_account_detail fad \r\n on \r\n cc.relation_id = fad.relation_id \r\n and cc.trx_ssn = fad.trx_ssn \r\n and cc.merchant_no = fad.merchant_no \r\n WHERE \r\n cc.org_no = fad.org_no \r\n and cc.business_line = fad.business_line \r\n and cc.channel_type = \'1\' \r\n and fad.channel_type = \'1\' \r\n and cc.consistent_type = \'P\' \r\n and cc.clear_date =:checkDate \r\n GROUP BY \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd','汇总T日清分总额-手续费数据',NULL),('110','200','处理非集邮、报刊业务线数据','UPDATE rpt_clearing_sum_info \r\nSET \r\nprod_forward_amount = plt_pay_amount, prod_reverse_amount = plt_rfn_amount, prod_net_amount = plt_net_amount, \r\nbegin_pay_not_clear_amount = 0, begin_rfn_not_clear_amount = 0, begin_net_not_clear_amount = 0, begin_not_handle_amount = 0, \r\nzxpt_self_pay_amount = plt_pay_amount, zxpt_self_rfn_amount = plt_rfn_amount, zxpt_self_net_amount = plt_net_amount, \r\nzxpt_not_self_pay_amount = 0, zxpt_not_self_rfn_amount = 0, zxpt_not_self_net_amount = 0, \r\nzxpt_plt_pay_amount = plt_pay_amount, zxpt_plt_rfn_amount = plt_rfn_amount, zxpt_plt_net_amount = plt_net_amount, zxpt_plt_diff_amount = 0, \r\nzxpt_prod_pay_amount = plt_pay_amount, zxpt_prod_rfn_amount = plt_rfn_amount, zxpt_prod_net_amount = plt_net_amount, zxpt_prod_diff_amount = 0, \r\ncurrent_pay_clear_amount = plt_pay_amount, current_rfn_clear_amount = plt_rfn_amount, current_net_clear_amout = plt_net_amount, \r\nhistory_pay_clear_amount = 0, history_rfn_clear_amount = 0, history_net_clear_amount = 0, \r\nclear_pay_handle_fee = plt_pay_handle_fee, clear_rfn_handle_fee = plt_rfn_handle_fee, clear_net_handle_fee = plt_net_handle_fee, \r\nend_pay_not_clear_amount = 0, end_rfn_not_clear_amount = 0, \r\nend_net_not_clear_amount = 0, end_not_handle_amount = 0 \r\nWHERE business_line in(\'FPK\',\'CC\',\'UTLY\',\'ZTYJ\') \r\nAND trans_date =?','处理非集邮、报刊业务线数据',NULL),('110','210','校验汇总与详情是否一致','select\na.trans_date,\na.org_no,\na.merchant_no,\na.business_line,\na.acc_ttp_cd,\na.current_pay_clear_amount sum_pay_amount,\nb.current_pay_clear_amount detail_pay_amount,\na.current_rfn_clear_amount sum_rfn_amount,\nb.current_rfn_clear_amount detail_rfn_amount,\na.current_net_clear_amout sum_net_amout,\nb.current_net_clear_amout detail_net_amout,\na.current_pay_clear_amount - b.current_pay_clear_amount as sum_reduce_detail_pay_amount,\na.current_rfn_clear_amount - b.current_rfn_clear_amount as sum_reduce_detail_rfn_amount,\na.history_net_clear_amount\nfrom\nrpt_clearing_sum_info a,\n(select cc.clear_date,cc.merchant_no, cc.org_no, cc.business_line, cc.acc_ttp_cd, IFNULL(sum(case when cc.balance_type = \'01\' then cc.business_amount end), 0) as current_pay_clear_amount\n, IFNULL(sum(case when cc.balance_type = \'02\' then cc.business_amount end), 0) as current_rfn_clear_amount, IFNULL(sum(case when cc.balance_type = \'01\' then cc.business_amount end), 0) - IFNULL(sum(case when cc.balance_type = \'02\' then cc.business_amount end), 0) as current_net_clear_amout\nfrom rpt_compare_consistent_snap cc\nwhere cc.channel_type = \'1\'\nand cc.consistent_type = \'P\'\n    and cc.clear_date =:checkDate\ngroup by cc.clear_date,cc.merchant_no, cc.org_no, cc.business_line, cc.acc_ttp_cd) b\nwhere a.trans_date = b.clear_date\nand a.merchant_no = b.merchant_no \nand a.org_no = b.org_no\nand a.business_line = b.business_line\nand a.acc_ttp_cd = b.acc_ttp_cd\nAND a.business_line IN (\'JY\',\'JYYF\',\'BK\')\nand IFNULL(a.current_net_clear_amout,0) + IFNULL(a.history_net_clear_amount,0) - IFNULL(b.current_net_clear_amout,0) != 0\norder by a.trans_date DESC','校验汇总与详情是否一致',NULL),('110','70','汇总统一支付平台数据','SELECT \r\n fa.org_no, \r\n fa.merchant_no, \r\n fa.business_line, \r\n fa.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.business_amount END),0) as plt_pay_amount, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN fa.business_amount END),0) as plt_rfn_amount, \r\n (IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.business_amount END),0) - IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN fa.business_amount END),0)) as plt_net_amount, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.fee_cent END),0) as plt_pay_handle_fee, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN CASE WHEN fa.trx_flag = \'PTP\' THEN fa.fee_cent*(-1) ELSE fa.fee_cent END END),0) as plt_rfn_handle_fee, \r\n (IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.fee_cent END),0)-IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN CASE WHEN fa.trx_flag = \'PTP\' THEN fa.fee_cent*(-1) ELSE fa.fee_cent END END),0)) as plt_net_handle_fee \r\n FROM \r\n rpt_fund_account_detail fa \r\n WHERE \r\n fa.channel_type = \'1\' \r\n and fa.check_date =:checkDate \r\n GROUP BY fa.check_date, \r\n fa.merchant_no, \r\n fa.org_no, \r\n fa.business_line, \r\n fa.acc_ttp_cd','汇总统一支付平台数据',NULL),('110','75','汇总生产系统数据','SELECT \r\n ccu.merchant_no, \r\n ccu.org_no, \r\n ccu.business_line, \r\n ccu.acc_ttp_cd, \r\n IFNULL(SUM(ccu.prod_forward_amount),0) as prod_forward_amount, \r\n IFNULL(SUM(ccu.prod_reverse_amount),0) as prod_reverse_amount, \r\n (IFNULL(SUM(ccu.prod_forward_amount),0)-IFNULL(SUM(ccu.prod_reverse_amount),0)) as prod_net_amount \r\n from \r\n(SELECT \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) as prod_forward_amount, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0) as prod_reverse_amount \r\n FROM \r\n rpt_compare_consistent_snap cc \r\n WHERE \r\n cc.consistent_type = \'P\' \r\n and cc.channel_type = \'1\' \r\n and cc.prod_check_date =:checkDate \r\n GROUP BY \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd \r\n UNION \r\nSELECT \r\n cu.merchant_no, \r\n cu.org_no, \r\n cu.business_line, \r\n cu.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cu.oper_type like \'1%\' THEN IFNULL(cu.business_amount,cu.prod_chk_amount) END),0) as prod_forward_amount, \r\n IFNULL(SUM(CASE WHEN (cu.oper_type like \'2%\' or cu.oper_type like \'3%\') THEN IFNULL(cu.business_amount,cu.prod_chk_amount) END),0) as prod_reverse_amount \r\n FROM \r\n rpt_compare_unconsistent cu \r\n WHERE \r\n cu.exception_source  = \'P\' \r\n and cu.channel_type = \'1\' \r\n and cu.prod_check_date =:checkDate \r\n GROUP BY \r\n cu.merchant_no, \r\n cu.org_no, \r\n cu.business_line, \r\n cu.acc_ttp_cd \r\n ) ccu \r\n GROUP BY \r\n ccu.merchant_no, \r\n ccu.org_no, \r\n ccu.business_line, \r\n ccu.acc_ttp_cd ','汇总生产系统数据',NULL),('300','11','获取封片卡二次清分下单数据','select fund.order_no, fund.trx_ssn, fund.relation_id, tbo.order_amount trans_amount, tbo.discount_amount, tos.freight, fund.business_amount clear_amount, fund.fee_cent handle_fee,\nifnull(fund.business_amount, 0) - ifnull(fund.fee_cent, 0) actual_clear_amount,\nfund.business_line, fund.org_no, fund.merchant_no, fund.merchant_name, tbo.pre_order_create_time trans_date, fund.check_date clear_date, date_format(fund.check_date, \'%Y-%m\') clear_month, fund.balance_type, \'11\' trans_type,\ntos.receiver_name, tos.receiver_tel, tos.receiver_address, tos.prov_cd receiver_prov_cd, tos.prov_name receiver_prov_name, tos.city_cd receiver_city_cd, tos.city_name receiver_city_name,\ntos.cty_cd receiver_cty_cd, tos.cty_name receiver_cty_name, tbo.salesman_id, sales.sale_man_name salesman_name, sale_organ salesman_org, rpad(substring(dist.dist_cd, 1, 2), 6, 0) salesman_prov_cd, dist.prov_name salesman_prov_name,\ncase when substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else rpad(substring(dist.dist_cd, 1, 4), 6, 0) end salesman_city_cd,\ndist.city_name salesman_city_name, dist.dist_cd salesman_cty_cd, dist.cty_name salesman_cty_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else tos.prov_cd end income_prov_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.prov_name else tos.prov_name end income_prov_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0)\nwhen ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) not in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 4), 6, 0)\nelse tos.city_cd end income_city_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.city_name else tos.city_name end income_city_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.dist_cd else tos.cty_cd end income_cty_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.cty_name else tos.cty_name end income_cty_name,\nfund.acc_ttp_cd, fund.trx_flag, tbo.order_channel, tbo.shop_id, tbo.shop_name, now() created_time\nfrom rpt_fund_account_detail fund, t_order_shipping tos, t_business_order tbo\nleft join t_mbc_sales_bind_info sales on tbo.salesman_id = sales.sale_man_id and sales.state = \'0\'\nleft join bic_base_erp_org erp on sales.sale_organ = erp.code\nleft join bic_district dist on erp.administrative_division = dist.dist_cd\nwhere fund.business_order_id = tbo.business_order_id\nand tbo.business_order_id = tos.business_order_id\nand fund.check_date = ?\nand fund.channel_type = \'1\' and fund.business_line = \'FPK\' and fund.balance_type = \'01\';','获取封片卡二次清分下单数据',1),('300','21','获取封片卡二次清分取消数据','select fund.order_no, fund.trx_ssn, fund.relation_id, tbo.order_amount trans_amount, tbo.discount_amount, tos.freight, fund.business_amount clear_amount, fund.fee_cent handle_fee,\nifnull(fund.business_amount, 0) - ifnull(fund.fee_cent, 0) actual_clear_amount,\nfund.business_line, fund.org_no, fund.merchant_no, fund.merchant_name, tbo.pre_order_create_time trans_date, fund.check_date clear_date, date_format(fund.check_date, \'%Y-%m\') clear_month, fund.balance_type, \'21\' trans_type,\ntos.receiver_name, tos.receiver_tel, tos.receiver_address, tos.prov_cd receiver_prov_cd, tos.prov_name receiver_prov_name, tos.city_cd receiver_city_cd, tos.city_name receiver_city_name,\ntos.cty_cd receiver_cty_cd, tos.cty_name receiver_cty_name, tbo.salesman_id, sales.sale_man_name salesman_name, sale_organ salesman_org, rpad(substring(dist.dist_cd, 1, 2), 6, 0) salesman_prov_cd, dist.prov_name salesman_prov_name,\ncase when substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else rpad(substring(dist.dist_cd, 1, 4), 6, 0) end salesman_city_cd,\ndist.city_name salesman_city_name, dist.dist_cd salesman_cty_cd, dist.cty_name salesman_cty_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else tos.prov_cd end income_prov_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.prov_name else tos.prov_name end income_prov_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0)\nwhen ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) not in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 4), 6, 0)\nelse tos.city_cd end income_city_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.city_name else tos.city_name end income_city_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.dist_cd else tos.cty_cd end income_cty_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.cty_name else tos.cty_name end income_cty_name,\nfund.acc_ttp_cd, fund.trx_flag, tbo.order_channel, tbo.shop_id, tbo.shop_name, now() created_time\nfrom rpt_fund_account_detail fund, t_order_shipping tos, t_business_order tbo\nleft join t_mbc_sales_bind_info sales on tbo.salesman_id = sales.sale_man_id and sales.state = \'0\'\nleft join bic_base_erp_org erp on sales.sale_organ = erp.code\nleft join bic_district dist on erp.administrative_division = dist.dist_cd\nwhere fund.relation_id = tbo.business_order_id\nand tbo.business_order_id = tos.business_order_id\nand fund.check_date = ?\nand fund.channel_type = \'1\' and fund.business_line = \'FPK\' and fund.balance_type = \'02\';','获取封片卡二次清分取消数据',1),('300','22','获取封片卡二次清分售后数据','select fund.order_no, fund.trx_ssn, fund.relation_id, tor.rejected_amount trans_amount, 0 discount_amount, tor.freight, fund.business_amount clear_amount, fund.fee_cent handle_fee,\nifnull(fund.business_amount, 0) - ifnull(fund.fee_cent, 0) actual_clear_amount,\nfund.business_line, fund.org_no, fund.merchant_no, fund.merchant_name, tbo.pre_order_create_time trans_date, fund.check_date clear_date, date_format(fund.check_date, \'%Y-%m\') clear_month, fund.balance_type, \'22\' trans_type,\ntos.receiver_name, tos.receiver_tel, tos.receiver_address, tos.prov_cd receiver_prov_cd, tos.prov_name receiver_prov_name, tos.city_cd receiver_city_cd, tos.city_name receiver_city_name,\ntos.cty_cd receiver_cty_cd, tos.cty_name receiver_cty_name, tbo.salesman_id, sales.sale_man_name salesman_name, sale_organ salesman_org, rpad(substring(dist.dist_cd, 1, 2), 6, 0) salesman_prov_cd, dist.prov_name salesman_prov_name,\ncase when substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else rpad(substring(dist.dist_cd, 1, 4), 6, 0) end salesman_city_cd,\ndist.city_name salesman_city_name, dist.dist_cd salesman_cty_cd, dist.cty_name salesman_cty_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else tos.prov_cd end income_prov_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.prov_name else tos.prov_name end income_prov_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0)\nwhen ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) not in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 4), 6, 0)\nelse tos.city_cd end income_city_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.city_name else tos.city_name end income_city_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.dist_cd else tos.cty_cd end income_cty_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.cty_name else tos.cty_name end income_cty_name,\nfund.acc_ttp_cd, fund.trx_flag, tbo.order_channel, tbo.shop_id, tbo.shop_name, now() created_time\nfrom rpt_fund_account_detail fund, t_order_shipping tos, t_order_rejected tor, t_business_order tbo\nleft join t_mbc_sales_bind_info sales on tbo.salesman_id = sales.sale_man_id and sales.state = \'0\'\nleft join bic_base_erp_org erp on sales.sale_organ = erp.code\nleft join bic_district dist on erp.administrative_division = dist.dist_cd\nwhere fund.relation_id = tor.rejected_id\nand tbo.business_order_id = tos.business_order_id\nand tbo.business_order_id = tor.business_order_id\nand fund.check_date = ?\nand fund.channel_type = \'1\' and fund.business_line = \'FPK\' and fund.balance_type = \'02\';','获取封片卡二次清分售后数据',1),('300','31','二清数据校验','select count(*) from\n(\nselect concat(a.merchant_no, \'_\', a.acc_ttp_cd) g_key,\nsum(a.current_pay_clear_amount) s_p_amount, sum(a.current_rfn_clear_amount) s_r_amount,\nsum(a.clear_pay_handle_fee) c_p_fee, sum(a.clear_rfn_handle_fee) c_r_fee\nfrom rpt_clearing_sum_info a\nwhere a.business_line = \'FPK\' AND a.trans_date = ?\ngroup by g_key\n) sum,\n(\nselect concat(a.merchant_no, \'_\', a.acc_ttp_cd) g_key,\nsum(case when a.balance_type = \'01\' then ifnull(a.clear_amount,0) else 0 end) s_p_amount,\nsum(case when a.balance_type = \'02\' then ifnull(a.clear_amount,0) else 0 end) s_r_amount,\nsum(case when a.balance_type = \'01\' then ifnull(a.handle_fee,0) else 0 end) c_p_fee,\nsum(case when a.balance_type = \'02\' then ifnull(a.handle_fee,0) else 0 end) c_r_fee\nfrom rpt_pfp_clear_info a\nwhere a.business_line = \'FPK\' and a.clear_date = ?\ngroup by g_key\n) clear\nwhere sum.g_key = clear.g_key and\n(\nsum.s_p_amount <> clear.s_p_amount or sum.s_r_amount <> clear.s_r_amount\nor sum.c_p_fee <> clear.c_p_fee or sum.c_r_fee <> clear.c_r_fee\n);','二清数据校验',1),('310','100','获取主题邮局销量数据','SELECT\n\'ZTYJ\' AS business_type,\nshop.shop_id,\nshop.shop_name,\nCONCAT(SUBSTRING(shop.district_code, 1, 2),\'0000\') shop_prov_code,\nbic.prov_name as shop_prov_name,\nCASE WHEN CONCAT(SUBSTRING(shop.district_code, 1, 2), \'0000\') IN (\'110000\',\'120000\',\'310000\',\'500000\') THEN shop.district_code ELSE CONCAT(SUBSTRING(shop.district_code, 1, 4),\'00\') END AS shop_city_code,\ncase when CONCAT(SUBSTRING(shop.district_code, 1, 2), \'0000\') in (\'110000\', \'120000\', \'310000\', \'500000\') then bic2.cty_name else bic2.city_name end as shop_city_name,\nifnull(sku.sku_count,0) as sku_count,\nifnull(shop.pass_time,shop.created_time) as pass_time,\nifnull(pay.pay_count,0) as pay_count,\nifnull(pay.pay_amt,0) as pay_amt,\nifnull(rfn.rfn_count,0) as rfn_count,\nifnull(rfn.rfn_amt,0) as rfn_amt,\nifnull(pay.pay_count,0)-ifnull(rfn.rfn_count,0) as sale_count,\nifnull(pay.pay_amt,0)-ifnull(rfn.rfn_amt,0) as sale_amt,\nifnull(payItem.pay_sku_num,0)-ifnull(rfnCancel.rft_sku_num_cancel,0)-ifnull(rfnReject.rft_sku_num_reject,0) as sale_sku_count\nFROM\nmer_shop_basic shop\nLEFT JOIN\nbic_district bic ON CONCAT(SUBSTRING(shop.district_code, 1, 2),\n\'0000\') = bic.dist_cd\nAND bic.lev_cd = \'1\'\nLEFT JOIN\nbic_district bic2 ON\nCASE WHEN CONCAT(SUBSTRING(shop.district_code, 1, 2), \'0000\') IN (\'110000\',\'120000\',\'310000\',\'500000\') THEN shop.district_code ELSE CONCAT(SUBSTRING(shop.district_code, 1, 4),\'00\') END\n= bic2.dist_cd\nLEFT JOIN\n(SELECT\nshop_id, shop_name, COUNT(*) sku_count\nFROM\ngcc_sku\nWHERE\nprod_sys_id = \'ZTYJ\' AND catalog_id = 1\nAND is_enable = 1\nAND is_delete = 0\nGROUP BY shop_id , shop_name) sku ON shop.shop_id = sku.shop_id and shop.shop_name = sku.shop_name\n\nLEFT JOIN\n(SELECT\nsub.shop_id,\nsub.shop_name,\nSUM(sub.pay_amount) pay_amt,\nCOUNT(*) pay_count\nFROM\nt_pay_bill_record br, t_pay_bill_sub sub\nWHERE\nbr.pay_bill_id = sub.pay_bill_id\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'03\'\nAND br.is_effect = \'1\'\nAND sub.business_line = \'ZTYJ\'\nGROUP BY sub.shop_id , sub.shop_name) pay ON shop.shop_id = pay.shop_id\n\nLEFT JOIN\n(SELECT\nsub.shop_id,\nsub.shop_name,\nsum(item.sku_num) pay_sku_num\nFROM\nt_pay_bill_record br, t_pay_bill_sub sub, t_order_item item\nWHERE\nbr.pay_bill_id = sub.pay_bill_id\nand sub.business_no =item.order_no\nand sub.shop_id = item.shop_id\nand br.pay_result_date between :beginStatDate and :endStatDate\n AND br.pay_status = \'03\'\nAND br.is_effect = \'1\'\nAND sub.business_line = \'ZTYJ\'\nGROUP BY sub.shop_id , sub.shop_name) payItem ON shop.shop_id = payItem.shop_id\n\nLEFT JOIN\n(\nSELECT\ntbo.shop_id,\ntbo.shop_name,\nCOUNT(*) rfn_count,\nSUM(sub.rfn_amount) rfn_amt\nFROM\nt_refund_bill_record br, t_refund_bill_sub sub, t_business_order tbo\nWHERE\nbr.refund_bill_id = sub.refund_bill_id\nAND sub.sub_bus_no = tbo.order_no\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'11\' AND sub.business_line = \'ZTYJ\'\nGROUP BY tbo.shop_id , tbo.shop_name) rfn ON shop.shop_id = rfn.shop_id\n\nLEFT JOIN\n(\nSELECT\ntbo.shop_id,\ntbo.shop_name,\nsum(item.sku_num) rft_sku_num_cancel\nFROM\nt_refund_bill_record br, t_refund_bill_sub sub, t_business_order tbo, t_order_item item\nWHERE\nbr.refund_bill_id = sub.refund_bill_id\nAND sub.sub_bus_no = tbo.order_no\nand tbo.order_no = item.order_no\nand tbo.shop_id=item.shop_id\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'11\' AND sub.business_line = \'ZTYJ\'\nGROUP BY tbo.shop_id , tbo.shop_name) rfnCancel ON shop.shop_id = rfnCancel.shop_id\n\nLEFT JOIN\n(\nSELECT\ntbo.shop_id,\ntbo.shop_name,\nsum(tor.sku_num) rft_sku_num_reject\nFROM\nt_refund_bill_record br, t_refund_bill_sub sub, t_business_order tbo, t_order_rejected tor\nWHERE\nbr.refund_bill_id = sub.refund_bill_id\nAND sub.sub_bus_no = tor.rejected_id\nand tbo.business_order_id = tor.business_order_id\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'11\' AND sub.business_line = \'ZTYJ\'\nGROUP BY tbo.shop_id , tbo.shop_name) rfnReject ON shop.shop_id = rfnReject.shop_id\n\nWHERE shop.business_type = \'ZTYJ\' AND shop.status = \'2\';','获取主题邮局销量数据',1);


INSERT INTO
  `rpt_clear_task_step`
VALUES
  (
    '100',
    '100',
    '查询clear_date为空记录数',
    'SELECT COUNT(1) from rpt_compare_consistent w WHERE (w.clear_date is NULL OR w.clear_date = \'0000-00-00\') and w.consistent_type = \'P\'',
    '查询一致表中clear_date为空记录数',
    NULL
  ),(
    '100',
    '105',
    '更新clear_date字段',
    'UPDATE rpt_compare_consistent\r\nset clear_date = IF(prod_check_date >= IF(fund_check_date >= busi_trans_date,fund_check_date,busi_trans_date),prod_check_date,IF(fund_check_date >= busi_trans_date,fund_check_date,busi_trans_date))\r\nWHERE (clear_date is null OR clear_date = \'0000-00-00\')\r\nand consistent_type = \'P\'',
    '统一更新一致表clear_date内容(只更新consistent_type为P的记录)',
    NULL
  ),(
    '100',
    '110',
    '根据清分日期查询一致表快照记录数',
    'SELECT COUNT(1) FROM rpt_compare_consistent_snap WHERE clear_date =:currentDate',
    '一致快照表中的数据都是为P的，所以此时不用加consistent_type=P',
    NULL
  ),(
    '100',
    '115',
    '根据清分日期删除一致表快照记录',
    'DELETE from rpt_compare_consistent_snap WHERE clear_date =?',
    '一致快照表中的数据都是为P的，所以此时不用加consistent_type=P',
    NULL
  ),(
    '100',
    '120',
    '根据清分时间从一致表向一致表快照表灌入记',
    'INSERT INTO rpt_compare_consistent_snap (\r\nid,\r\norder_no,\r\nbusiness_order_id,\r\norg_flag,\r\nbusiness_line,\r\norder_type,\r\npay_method,\r\norder_amount,\r\ndiscount_amount,\r\npay_amount,\r\ncredit,\r\npoint_credit,\r\ncard_amount,\r\norg_no,\r\noper_type,\r\npro_no,\r\nsource_type,\r\nis_prod_sync,\r\nbusi_trans_date,\r\nbusi_trans_time,\r\nrelation_id,\r\nmerchant_no,\r\nmerchant_name,\r\ntrx_ssn,\r\nplt_dt,\r\nfund_check_date,\r\nori_trx_ssn,\r\nbalance_type,\r\nchk_source,\r\nbusiness_amount,\r\nbill_id,\r\nchannel_type,\r\nacc_ttp_cd,\r\nbill_type,\r\nrefund_type,\r\nrepeated_trans_flag,\r\nconsistent_type,\r\nprod_check_date,\r\nclear_date,\r\nprod_chk_amount,\r\nremark,\r\ncreated_time,\r\nsnap_time\r\n) SELECT\r\nid,\r\norder_no,\r\nbusiness_order_id,\r\norg_flag,\r\nbusiness_line,\r\norder_type,\r\npay_method,\r\norder_amount,\r\ndiscount_amount,\r\npay_amount,\r\ncredit,\r\npoint_credit,\r\ncard_amount,\r\norg_no,\r\noper_type,\r\npro_no,\r\nsource_type,\r\nis_prod_sync,\r\nbusi_trans_date,\r\nbusi_trans_time,\r\nrelation_id,\r\nmerchant_no,\r\nmerchant_name,\r\ntrx_ssn,\r\nplt_dt,\r\nfund_check_date,\r\nori_trx_ssn,\r\nbalance_type,\r\nchk_source,\r\nbusiness_amount,\r\nbill_id,\r\nchannel_type,\r\nacc_ttp_cd,\r\nbill_type,\r\nrefund_type,\r\nrepeated_trans_flag,\r\nconsistent_type,\r\nprod_check_date,\r\nclear_date,\r\nprod_chk_amount,\r\nremark,\r\ncreated_time,\r\nNOW()\r\nFROM\r\nrpt_compare_consistent\r\nWHERE\r\nconsistent_type = \'P\'\r\nAND clear_date =?',
    '根据清分时间从一致表向一致表快照表灌入记',
    NULL
  ),(
    '110',
    '100',
    '汇总T日清分总额-T日收进数据',
    'SELECT \n cc.merchant_no, \n cc.org_no, \n cc.business_line, \n cc.acc_ttp_cd, \n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) as current_pay_clear_amount, \n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0) as current_rfn_clear_amount, \n (IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) - IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0)) as current_net_clear_amout \n FROM \n rpt_compare_consistent_snap cc \n WHERE \n cc.channel_type = \'1\' \n and cc.consistent_type = \'P\' \n and cc.clear_date =:checkDate\n and cc.fund_check_date =:checkDate \n GROUP BY \n cc.merchant_no, \n cc.org_no, \n cc.business_line, \n cc.acc_ttp_cd',
    '汇总T日清分总额-T日收进数据',
    NULL
  ),(
    '110',
    '105',
    '汇总T日清分总额-历史应收进数据',
    'SELECT \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) as history_pay_clear_amount, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0) as history_rfn_clear_amount, \r\n (IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) - IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0)) as history_net_clear_amount \r\n FROM \r\n rpt_compare_consistent_snap cc \r\n WHERE \r\n cc.channel_type = \'1\' \r\n and cc.consistent_type = \'P\' \r\n and cc.clear_date =:checkDate \r\n and cc.fund_check_date <:checkDate \r\n GROUP BY \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd',
    '汇总T日清分总额-历史应收进数据',
    NULL
  ),(
    '110',
    '110',
    '汇总T日清分总额-手续费数据',
    'SELECT \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN fad.fee_cent END),0) as clear_pay_handle_fee, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN CASE WHEN fad.trx_flag = \'PTP\' THEN fad.fee_cent*(-1) ELSE fad.fee_cent END END),0) as clear_rfn_handle_fee, \r\n (IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN fad.fee_cent END),0) - IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN CASE WHEN fad.trx_flag = \'PTP\' THEN fad.fee_cent*(-1) ELSE fad.fee_cent END END),0)) as clear_net_handle_fee \r\n FROM \r\n rpt_compare_consistent_snap cc \r\n left join \r\n rpt_fund_account_detail fad \r\n on \r\n cc.relation_id = fad.relation_id \r\n and cc.trx_ssn = fad.trx_ssn \r\n and cc.merchant_no = fad.merchant_no \r\n WHERE \r\n cc.org_no = fad.org_no \r\n and cc.business_line = fad.business_line \r\n and cc.channel_type = \'1\' \r\n and fad.channel_type = \'1\' \r\n and cc.consistent_type = \'P\' \r\n and cc.clear_date =:checkDate \r\n GROUP BY \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd',
    '汇总T日清分总额-手续费数据',
    NULL
  ),(
    '110',
    '200',
    '处理非集邮、报刊业务线数据',
    'UPDATE rpt_clearing_sum_info \r\nSET \r\nprod_forward_amount = plt_pay_amount, prod_reverse_amount = plt_rfn_amount, prod_net_amount = plt_net_amount, \r\nbegin_pay_not_clear_amount = 0, begin_rfn_not_clear_amount = 0, begin_net_not_clear_amount = 0, begin_not_handle_amount = 0, \r\nzxpt_self_pay_amount = plt_pay_amount, zxpt_self_rfn_amount = plt_rfn_amount, zxpt_self_net_amount = plt_net_amount, \r\nzxpt_not_self_pay_amount = 0, zxpt_not_self_rfn_amount = 0, zxpt_not_self_net_amount = 0, \r\nzxpt_plt_pay_amount = plt_pay_amount, zxpt_plt_rfn_amount = plt_rfn_amount, zxpt_plt_net_amount = plt_net_amount, zxpt_plt_diff_amount = 0, \r\nzxpt_prod_pay_amount = plt_pay_amount, zxpt_prod_rfn_amount = plt_rfn_amount, zxpt_prod_net_amount = plt_net_amount, zxpt_prod_diff_amount = 0, \r\ncurrent_pay_clear_amount = plt_pay_amount, current_rfn_clear_amount = plt_rfn_amount, current_net_clear_amout = plt_net_amount, \r\nhistory_pay_clear_amount = 0, history_rfn_clear_amount = 0, history_net_clear_amount = 0, \r\nclear_pay_handle_fee = plt_pay_handle_fee, clear_rfn_handle_fee = plt_rfn_handle_fee, clear_net_handle_fee = plt_net_handle_fee, \r\nend_pay_not_clear_amount = 0, end_rfn_not_clear_amount = 0, \r\nend_net_not_clear_amount = 0, end_not_handle_amount = 0 \r\nWHERE business_line in(\'FPK\',\'CC\',\'UTLY\',\'ZTYJ\') \r\nAND trans_date =?',
    '处理非集邮、报刊业务线数据',
    NULL
  ),(
    '110',
    '210',
    '校验汇总与详情是否一致',
    'select\na.trans_date,\na.org_no,\na.merchant_no,\na.business_line,\na.acc_ttp_cd,\na.current_pay_clear_amount sum_pay_amount,\nb.current_pay_clear_amount detail_pay_amount,\na.current_rfn_clear_amount sum_rfn_amount,\nb.current_rfn_clear_amount detail_rfn_amount,\na.current_net_clear_amout sum_net_amout,\nb.current_net_clear_amout detail_net_amout,\na.current_pay_clear_amount - b.current_pay_clear_amount as sum_reduce_detail_pay_amount,\na.current_rfn_clear_amount - b.current_rfn_clear_amount as sum_reduce_detail_rfn_amount,\na.history_net_clear_amount\nfrom\nrpt_clearing_sum_info a,\n(select cc.clear_date,cc.merchant_no, cc.org_no, cc.business_line, cc.acc_ttp_cd, IFNULL(sum(case when cc.balance_type = \'01\' then cc.business_amount end), 0) as current_pay_clear_amount\n, IFNULL(sum(case when cc.balance_type = \'02\' then cc.business_amount end), 0) as current_rfn_clear_amount, IFNULL(sum(case when cc.balance_type = \'01\' then cc.business_amount end), 0) - IFNULL(sum(case when cc.balance_type = \'02\' then cc.business_amount end), 0) as current_net_clear_amout\nfrom rpt_compare_consistent_snap cc\nwhere cc.channel_type = \'1\'\nand cc.consistent_type = \'P\'\n    and cc.clear_date =:checkDate\ngroup by cc.clear_date,cc.merchant_no, cc.org_no, cc.business_line, cc.acc_ttp_cd) b\nwhere a.trans_date = b.clear_date\nand a.merchant_no = b.merchant_no \nand a.org_no = b.org_no\nand a.business_line = b.business_line\nand a.acc_ttp_cd = b.acc_ttp_cd\nAND a.business_line IN (\'JY\',\'JYYF\',\'BK\')\nand IFNULL(a.current_net_clear_amout,0) + IFNULL(a.history_net_clear_amount,0) - IFNULL(b.current_net_clear_amout,0) != 0\norder by a.trans_date DESC',
    '校验汇总与详情是否一致',
    NULL
  ),(
    '110',
    '70',
    '汇总统一支付平台数据',
    'SELECT \r\n fa.org_no, \r\n fa.merchant_no, \r\n fa.business_line, \r\n fa.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.business_amount END),0) as plt_pay_amount, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN fa.business_amount END),0) as plt_rfn_amount, \r\n (IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.business_amount END),0) - IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN fa.business_amount END),0)) as plt_net_amount, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.fee_cent END),0) as plt_pay_handle_fee, \r\n IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN CASE WHEN fa.trx_flag = \'PTP\' THEN fa.fee_cent*(-1) ELSE fa.fee_cent END END),0) as plt_rfn_handle_fee, \r\n (IFNULL(SUM(CASE WHEN fa.balance_type = \'01\' THEN fa.fee_cent END),0)-IFNULL(SUM(CASE WHEN fa.balance_type = \'02\' THEN CASE WHEN fa.trx_flag = \'PTP\' THEN fa.fee_cent*(-1) ELSE fa.fee_cent END END),0)) as plt_net_handle_fee \r\n FROM \r\n rpt_fund_account_detail fa \r\n WHERE \r\n fa.channel_type = \'1\' \r\n and fa.check_date =:checkDate \r\n GROUP BY fa.check_date, \r\n fa.merchant_no, \r\n fa.org_no, \r\n fa.business_line, \r\n fa.acc_ttp_cd',
    '汇总统一支付平台数据',
    NULL
  ),(
    '110',
    '75',
    '汇总生产系统数据',
    'SELECT \r\n ccu.merchant_no, \r\n ccu.org_no, \r\n ccu.business_line, \r\n ccu.acc_ttp_cd, \r\n IFNULL(SUM(ccu.prod_forward_amount),0) as prod_forward_amount, \r\n IFNULL(SUM(ccu.prod_reverse_amount),0) as prod_reverse_amount, \r\n (IFNULL(SUM(ccu.prod_forward_amount),0)-IFNULL(SUM(ccu.prod_reverse_amount),0)) as prod_net_amount \r\n from \r\n(SELECT \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'01\' THEN cc.business_amount END),0) as prod_forward_amount, \r\n IFNULL(SUM(CASE WHEN cc.balance_type = \'02\' THEN cc.business_amount END),0) as prod_reverse_amount \r\n FROM \r\n rpt_compare_consistent_snap cc \r\n WHERE \r\n cc.consistent_type = \'P\' \r\n and cc.channel_type = \'1\' \r\n and cc.prod_check_date =:checkDate \r\n GROUP BY \r\n cc.merchant_no, \r\n cc.org_no, \r\n cc.business_line, \r\n cc.acc_ttp_cd \r\n UNION \r\nSELECT \r\n cu.merchant_no, \r\n cu.org_no, \r\n cu.business_line, \r\n cu.acc_ttp_cd, \r\n IFNULL(SUM(CASE WHEN cu.oper_type like \'1%\' THEN IFNULL(cu.business_amount,cu.prod_chk_amount) END),0) as prod_forward_amount, \r\n IFNULL(SUM(CASE WHEN (cu.oper_type like \'2%\' or cu.oper_type like \'3%\') THEN IFNULL(cu.business_amount,cu.prod_chk_amount) END),0) as prod_reverse_amount \r\n FROM \r\n rpt_compare_unconsistent cu \r\n WHERE \r\n cu.exception_source  = \'P\' \r\n and cu.channel_type = \'1\' \r\n and cu.prod_check_date =:checkDate \r\n GROUP BY \r\n cu.merchant_no, \r\n cu.org_no, \r\n cu.business_line, \r\n cu.acc_ttp_cd \r\n ) ccu \r\n GROUP BY \r\n ccu.merchant_no, \r\n ccu.org_no, \r\n ccu.business_line, \r\n ccu.acc_ttp_cd ',
    '汇总生产系统数据',
    NULL
  ),(
    '300',
    '11',
    '获取封片卡二次清分下单数据',
    'select fund.order_no, fund.trx_ssn, fund.relation_id, tbo.order_amount trans_amount, tbo.discount_amount, tos.freight, fund.business_amount clear_amount, fund.fee_cent handle_fee,\nifnull(fund.business_amount, 0) - ifnull(fund.fee_cent, 0) actual_clear_amount,\nfund.business_line, fund.org_no, fund.merchant_no, fund.merchant_name, tbo.pre_order_create_time trans_date, fund.check_date clear_date, date_format(fund.check_date, \'%Y-%m\') clear_month, fund.balance_type, \'11\' trans_type,\ntos.receiver_name, tos.receiver_tel, tos.receiver_address, tos.prov_cd receiver_prov_cd, tos.prov_name receiver_prov_name, tos.city_cd receiver_city_cd, tos.city_name receiver_city_name,\ntos.cty_cd receiver_cty_cd, tos.cty_name receiver_cty_name, tbo.salesman_id, sales.sale_man_name salesman_name, sale_organ salesman_org, rpad(substring(dist.dist_cd, 1, 2), 6, 0) salesman_prov_cd, dist.prov_name salesman_prov_name,\ncase when substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else rpad(substring(dist.dist_cd, 1, 4), 6, 0) end salesman_city_cd,\ndist.city_name salesman_city_name, dist.dist_cd salesman_cty_cd, dist.cty_name salesman_cty_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else tos.prov_cd end income_prov_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.prov_name else tos.prov_name end income_prov_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0)\nwhen ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) not in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 4), 6, 0)\nelse tos.city_cd end income_city_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.city_name else tos.city_name end income_city_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.dist_cd else tos.cty_cd end income_cty_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.cty_name else tos.cty_name end income_cty_name,\nfund.acc_ttp_cd, fund.trx_flag, tbo.order_channel, tbo.shop_id, tbo.shop_name, now() created_time\nfrom rpt_fund_account_detail fund, t_order_shipping tos, t_business_order tbo\nleft join t_mbc_sales_bind_info sales on tbo.salesman_id = sales.sale_man_id and sales.state = \'0\'\nleft join bic_base_erp_org erp on sales.sale_organ = erp.code\nleft join bic_district dist on erp.administrative_division = dist.dist_cd\nwhere fund.business_order_id = tbo.business_order_id\nand tbo.business_order_id = tos.business_order_id\nand fund.check_date = ?\nand fund.channel_type = \'1\' and fund.business_line = \'FPK\' and fund.balance_type = \'01\';',
    '获取封片卡二次清分下单数据',
    1
  ),(
    '300',
    '21',
    '获取封片卡二次清分取消数据',
    'select fund.order_no, fund.trx_ssn, fund.relation_id, tbo.order_amount trans_amount, tbo.discount_amount, tos.freight, fund.business_amount clear_amount, fund.fee_cent handle_fee,\nifnull(fund.business_amount, 0) - ifnull(fund.fee_cent, 0) actual_clear_amount,\nfund.business_line, fund.org_no, fund.merchant_no, fund.merchant_name, tbo.pre_order_create_time trans_date, fund.check_date clear_date, date_format(fund.check_date, \'%Y-%m\') clear_month, fund.balance_type, \'21\' trans_type,\ntos.receiver_name, tos.receiver_tel, tos.receiver_address, tos.prov_cd receiver_prov_cd, tos.prov_name receiver_prov_name, tos.city_cd receiver_city_cd, tos.city_name receiver_city_name,\ntos.cty_cd receiver_cty_cd, tos.cty_name receiver_cty_name, tbo.salesman_id, sales.sale_man_name salesman_name, sale_organ salesman_org, rpad(substring(dist.dist_cd, 1, 2), 6, 0) salesman_prov_cd, dist.prov_name salesman_prov_name,\ncase when substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else rpad(substring(dist.dist_cd, 1, 4), 6, 0) end salesman_city_cd,\ndist.city_name salesman_city_name, dist.dist_cd salesman_cty_cd, dist.cty_name salesman_cty_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else tos.prov_cd end income_prov_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.prov_name else tos.prov_name end income_prov_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0)\nwhen ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) not in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 4), 6, 0)\nelse tos.city_cd end income_city_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.city_name else tos.city_name end income_city_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.dist_cd else tos.cty_cd end income_cty_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.cty_name else tos.cty_name end income_cty_name,\nfund.acc_ttp_cd, fund.trx_flag, tbo.order_channel, tbo.shop_id, tbo.shop_name, now() created_time\nfrom rpt_fund_account_detail fund, t_order_shipping tos, t_business_order tbo\nleft join t_mbc_sales_bind_info sales on tbo.salesman_id = sales.sale_man_id and sales.state = \'0\'\nleft join bic_base_erp_org erp on sales.sale_organ = erp.code\nleft join bic_district dist on erp.administrative_division = dist.dist_cd\nwhere fund.relation_id = tbo.business_order_id\nand tbo.business_order_id = tos.business_order_id\nand fund.check_date = ?\nand fund.channel_type = \'1\' and fund.business_line = \'FPK\' and fund.balance_type = \'02\';',
    '获取封片卡二次清分取消数据',
    1
  ),(
    '300',
    '22',
    '获取封片卡二次清分售后数据',
    'select fund.order_no, fund.trx_ssn, fund.relation_id, tor.rejected_amount trans_amount, 0 discount_amount, tor.freight, fund.business_amount clear_amount, fund.fee_cent handle_fee,\nifnull(fund.business_amount, 0) - ifnull(fund.fee_cent, 0) actual_clear_amount,\nfund.business_line, fund.org_no, fund.merchant_no, fund.merchant_name, tbo.pre_order_create_time trans_date, fund.check_date clear_date, date_format(fund.check_date, \'%Y-%m\') clear_month, fund.balance_type, \'22\' trans_type,\ntos.receiver_name, tos.receiver_tel, tos.receiver_address, tos.prov_cd receiver_prov_cd, tos.prov_name receiver_prov_name, tos.city_cd receiver_city_cd, tos.city_name receiver_city_name,\ntos.cty_cd receiver_cty_cd, tos.cty_name receiver_cty_name, tbo.salesman_id, sales.sale_man_name salesman_name, sale_organ salesman_org, rpad(substring(dist.dist_cd, 1, 2), 6, 0) salesman_prov_cd, dist.prov_name salesman_prov_name,\ncase when substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else rpad(substring(dist.dist_cd, 1, 4), 6, 0) end salesman_city_cd,\ndist.city_name salesman_city_name, dist.dist_cd salesman_cty_cd, dist.cty_name salesman_cty_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then rpad(substring(dist.dist_cd, 1, 2), 6, 0) else tos.prov_cd end income_prov_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.prov_name else tos.prov_name end income_prov_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 2), 6, 0)\nwhen ifnull(dist.prov_name,\'none\') <> \'none\' and substring(dist.dist_cd, 1, 2) not in (\'11\',\'12\',\'31\',\'50\') then rpad(substring(dist.dist_cd, 1, 4), 6, 0)\nelse tos.city_cd end income_city_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.city_name else tos.city_name end income_city_name,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.dist_cd else tos.cty_cd end income_cty_cd,\ncase when ifnull(dist.prov_name,\'none\') <> \'none\' then dist.cty_name else tos.cty_name end income_cty_name,\nfund.acc_ttp_cd, fund.trx_flag, tbo.order_channel, tbo.shop_id, tbo.shop_name, now() created_time\nfrom rpt_fund_account_detail fund, t_order_shipping tos, t_order_rejected tor, t_business_order tbo\nleft join t_mbc_sales_bind_info sales on tbo.salesman_id = sales.sale_man_id and sales.state = \'0\'\nleft join bic_base_erp_org erp on sales.sale_organ = erp.code\nleft join bic_district dist on erp.administrative_division = dist.dist_cd\nwhere fund.relation_id = tor.rejected_id\nand tbo.business_order_id = tos.business_order_id\nand tbo.business_order_id = tor.business_order_id\nand fund.check_date = ?\nand fund.channel_type = \'1\' and fund.business_line = \'FPK\' and fund.balance_type = \'02\';',
    '获取封片卡二次清分售后数据',
    1
  ),(
    '300',
    '31',
    '二清数据校验',
    'select count(*) from\n(\nselect concat(a.merchant_no, \'_\', a.acc_ttp_cd) g_key,\nsum(a.current_pay_clear_amount) s_p_amount, sum(a.current_rfn_clear_amount) s_r_amount,\nsum(a.clear_pay_handle_fee) c_p_fee, sum(a.clear_rfn_handle_fee) c_r_fee\nfrom rpt_clearing_sum_info a\nwhere a.business_line = \'FPK\' AND a.trans_date = ?\ngroup by g_key\n) sum,\n(\nselect concat(a.merchant_no, \'_\', a.acc_ttp_cd) g_key,\nsum(case when a.balance_type = \'01\' then ifnull(a.clear_amount,0) else 0 end) s_p_amount,\nsum(case when a.balance_type = \'02\' then ifnull(a.clear_amount,0) else 0 end) s_r_amount,\nsum(case when a.balance_type = \'01\' then ifnull(a.handle_fee,0) else 0 end) c_p_fee,\nsum(case when a.balance_type = \'02\' then ifnull(a.handle_fee,0) else 0 end) c_r_fee\nfrom rpt_pfp_clear_info a\nwhere a.business_line = \'FPK\' and a.clear_date = ?\ngroup by g_key\n) clear\nwhere sum.g_key = clear.g_key and\n(\nsum.s_p_amount <> clear.s_p_amount or sum.s_r_amount <> clear.s_r_amount\nor sum.c_p_fee <> clear.c_p_fee or sum.c_r_fee <> clear.c_r_fee\n);',
    '二清数据校验',
    1
  ),(
    '310',
    '100',
    '获取主题邮局销量数据',
    'SELECT\n\'ZTYJ\' AS business_type,\nshop.shop_id,\nshop.shop_name,\nCONCAT(SUBSTRING(shop.district_code, 1, 2),\'0000\') shop_prov_code,\nbic.prov_name as shop_prov_name,\nCASE WHEN CONCAT(SUBSTRING(shop.district_code, 1, 2), \'0000\') IN (\'110000\',\'120000\',\'310000\',\'500000\') THEN shop.district_code ELSE CONCAT(SUBSTRING(shop.district_code, 1, 4),\'00\') END AS shop_city_code,\ncase when CONCAT(SUBSTRING(shop.district_code, 1, 2), \'0000\') in (\'110000\', \'120000\', \'310000\', \'500000\') then bic2.cty_name else bic2.city_name end as shop_city_name,\nifnull(sku.sku_count,0) as sku_count,\nifnull(shop.pass_time,shop.created_time) as pass_time,\nifnull(pay.pay_count,0) as pay_count,\nifnull(pay.pay_amt,0) as pay_amt,\nifnull(rfn.rfn_count,0) as rfn_count,\nifnull(rfn.rfn_amt,0) as rfn_amt,\nifnull(pay.pay_count,0)-ifnull(rfn.rfn_count,0) as sale_count,\nifnull(pay.pay_amt,0)-ifnull(rfn.rfn_amt,0) as sale_amt,\nifnull(payItem.pay_sku_num,0)-ifnull(rfnCancel.rft_sku_num_cancel,0)-ifnull(rfnReject.rft_sku_num_reject,0) as sale_sku_count\nFROM\nmer_shop_basic shop\nLEFT JOIN\nbic_district bic ON CONCAT(SUBSTRING(shop.district_code, 1, 2),\n\'0000\') = bic.dist_cd\nAND bic.lev_cd = \'1\'\nLEFT JOIN\nbic_district bic2 ON\nCASE WHEN CONCAT(SUBSTRING(shop.district_code, 1, 2), \'0000\') IN (\'110000\',\'120000\',\'310000\',\'500000\') THEN shop.district_code ELSE CONCAT(SUBSTRING(shop.district_code, 1, 4),\'00\') END\n= bic2.dist_cd\nLEFT JOIN\n(SELECT\nshop_id, shop_name, COUNT(*) sku_count\nFROM\ngcc_sku\nWHERE\nprod_sys_id = \'ZTYJ\' AND catalog_id = 1\nAND is_enable = 1\nAND is_delete = 0\nGROUP BY shop_id , shop_name) sku ON shop.shop_id = sku.shop_id and shop.shop_name = sku.shop_name\n\nLEFT JOIN\n(SELECT\nsub.shop_id,\nsub.shop_name,\nSUM(sub.pay_amount) pay_amt,\nCOUNT(*) pay_count\nFROM\nt_pay_bill_record br, t_pay_bill_sub sub\nWHERE\nbr.pay_bill_id = sub.pay_bill_id\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'03\'\nAND br.is_effect = \'1\'\nAND sub.business_line = \'ZTYJ\'\nGROUP BY sub.shop_id , sub.shop_name) pay ON shop.shop_id = pay.shop_id\n\nLEFT JOIN\n(SELECT\nsub.shop_id,\nsub.shop_name,\nsum(item.sku_num) pay_sku_num\nFROM\nt_pay_bill_record br, t_pay_bill_sub sub, t_order_item item\nWHERE\nbr.pay_bill_id = sub.pay_bill_id\nand sub.business_no =item.order_no\nand sub.shop_id = item.shop_id\nand br.pay_result_date between :beginStatDate and :endStatDate\n AND br.pay_status = \'03\'\nAND br.is_effect = \'1\'\nAND sub.business_line = \'ZTYJ\'\nGROUP BY sub.shop_id , sub.shop_name) payItem ON shop.shop_id = payItem.shop_id\n\nLEFT JOIN\n(\nSELECT\ntbo.shop_id,\ntbo.shop_name,\nCOUNT(*) rfn_count,\nSUM(sub.rfn_amount) rfn_amt\nFROM\nt_refund_bill_record br, t_refund_bill_sub sub, t_business_order tbo\nWHERE\nbr.refund_bill_id = sub.refund_bill_id\nAND sub.sub_bus_no = tbo.order_no\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'11\' AND sub.business_line = \'ZTYJ\'\nGROUP BY tbo.shop_id , tbo.shop_name) rfn ON shop.shop_id = rfn.shop_id\n\nLEFT JOIN\n(\nSELECT\ntbo.shop_id,\ntbo.shop_name,\nsum(item.sku_num) rft_sku_num_cancel\nFROM\nt_refund_bill_record br, t_refund_bill_sub sub, t_business_order tbo, t_order_item item\nWHERE\nbr.refund_bill_id = sub.refund_bill_id\nAND sub.sub_bus_no = tbo.order_no\nand tbo.order_no = item.order_no\nand tbo.shop_id=item.shop_id\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'11\' AND sub.business_line = \'ZTYJ\'\nGROUP BY tbo.shop_id , tbo.shop_name) rfnCancel ON shop.shop_id = rfnCancel.shop_id\n\nLEFT JOIN\n(\nSELECT\ntbo.shop_id,\ntbo.shop_name,\nsum(tor.sku_num) rft_sku_num_reject\nFROM\nt_refund_bill_record br, t_refund_bill_sub sub, t_business_order tbo, t_order_rejected tor\nWHERE\nbr.refund_bill_id = sub.refund_bill_id\nAND sub.sub_bus_no = tor.rejected_id\nand tbo.business_order_id = tor.business_order_id\nand br.pay_result_date between :beginStatDate and :endStatDate\nAND br.pay_status = \'11\' AND sub.business_line = \'ZTYJ\'\nGROUP BY tbo.shop_id , tbo.shop_name) rfnReject ON shop.shop_id = rfnReject.shop_id\n\nWHERE shop.business_type = \'ZTYJ\' AND shop.status = \'2\';',
    '获取主题邮局销量数据',
    1
  );